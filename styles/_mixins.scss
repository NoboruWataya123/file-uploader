@mixin push--auto {
    margin: { 
        left: auto;
        right: auto;
    }
}

$breakpoints: (
    "phone":        400px,
    "phone-wide":   480px,
    "phablet":      560px,
    "tablet-small": 640px,
    "tablet":       768px,
    "tablet-wide":  1024px,
    "desktop":      1248px,
    "desktop-wide": 1440px
);
@mixin mq($width, $type: min) {
    @if map_has_key($breakpoints, $width) {
        $width: map_get($breakpoints, $width);
        @if $type == max {
            $width: $width - 1px;
        }
        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}

// .site-header {
//     padding: 2rem;
//     font-size: 1.8rem;
//     @include mq('tablet-wide') {
//         padding-top: 4rem;
//         font-size: 2.4rem;
//     }
// }

@mixin flex-column {
    display: flex;
    flex-direction: column;
  }
  
  @mixin flex-center {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  @mixin flex-center-column {
    @include flex-center;
    flex-direction: column;
  }
  
  @mixin flex-center-vert {
    display: flex;
    align-items: center;
  }
  
  @mixin flex-center-horiz {
    display: flex;
    justify-content: center;
  }

  @mixin font-face($font-name, $path, $weight: normal, $style: normal) {
    @font-face {
      font-family: quote($font-name);
      src: url($path+".eot");
      src: url($path+".eot?#iefix") format("embedded-opentype"), url($path+".woff")
          format("woff"), url($path+".ttf") format("truetype"), url($path+".svg##{$font-name}")
          format("svg");
      font-weight: $weight;
      font-style: $style;
    }
  }
  
  /* ===== Usage ===== */
//   @include font-face(Roboto, "./assets/Roboto", normal, normal);

@mixin cover-background {
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
  }

//   div {
//     background-image: url("cute-doggo.png");
//     @include cover-background;
//   }

@mixin pseudo(
  $width: 100%,
  $height: 100%,
  $display: inline-block,
  $pos: absolute,
  $content: ""
) {
  content: $content;
  display: $display;
  position: $pos;
  @include box($width, $height);
}

/* ===== Usage ===== */
// div {
//   position: relative;
//   width: 200px;
//   height: 200px;

//   &:after {
//     @include pseudo(100px, 100px);
//   }
// }

@mixin fade($type) {
    @if $type== "hide" {
      visibility: hidden;
      opacity: 0;
      transition: visibility 1s, opacity 1s;
    } @else if $type== "show" {
      visibility: visible;
      opacity: 1;
      transition: visibility 1s, opacity 1s;
    }
  }


  @mixin skew-background-transition($initial, $hover, $inverted: false) {
    background: linear-gradient(
      90deg,
      $hover 0%,
      $hover 50%,
      $initial 50%,
      $initial 100%
    );
    background-repeat: no-repeat;
    background-size: 200% 100%;
  
    background-position: right bottom;
    @if $inverted {
      background-position: left bottom;
    }
    transition: background-position 0.25s ease-out;
  
    &:hover {
      background-position: left bottom;
      @if $inverted {
        background-position: right bottom;
      }
    }
  }

  @mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
      @content;
    }
    @-moz-keyframes #{$name} {
      @content;
    }
    @keyframes #{$name} {
      @content;
    }
 }

//  @include keyframes(background) {
//     0% {
//       background: white;
//     }
//     50% {
//       background: lightblue;
//     }
//     100% {
//       background: royalblue;
//     } 
//  }

@mixin retina-image($image, $width, $height) {
    @media (min--moz-device-pixel-ratio: 1.3),
    (-o-min-device-pixel-ratio: 2.6/2),
    (-webkit-min-device-pixel-ratio: 1.3),
    (min-device-pixel-ratio: 1.3),
    (min-resolution: 1.3dppx) {
        background-image: url($image);
        background-size: $width $height;
    }
 }


//  .image {
//     background: url("my-image.png") no-repeat;
//     @include retina-image("my-image2x.png", 1000px, 500px);
// }